// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeWatcher.Data;

#nullable disable

namespace TimeWatcher.Data.Migrations
{
    [DbContext(typeof(WorkDataContext))]
    [Migration("20241226200704_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("TgBotFrame.Commands.Authorization.Models.DbBan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Until")
                        .HasColumnType("TEXT");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Until");

                    b.ToTable("Bans");
                });

            modelBuilder.Entity("TgBotFrame.Commands.Authorization.Models.DbRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("MentionEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            MentionEnabled = false,
                            Name = "admin"
                        },
                        new
                        {
                            Id = -2,
                            MentionEnabled = false,
                            Name = "ban_list"
                        });
                });

            modelBuilder.Entity("TgBotFrame.Commands.Authorization.Models.DbRoleMember", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("RoleMembers");
                });

            modelBuilder.Entity("TgBotFrame.Commands.Authorization.Models.DbUser", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasMaxLength(64)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasMaxLength(32)
                        .IsUnicode(true)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TimeWatcher.Data.Models.DbWorkMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Date")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("WorkMessages");
                });

            modelBuilder.Entity("TimeWatcher.Data.Models.DbWorkRecord", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Date")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Arrived")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("Left")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserId", "Date");

                    b.HasIndex("Date")
                        .IsDescending();

                    b.HasIndex("UserId");

                    b.ToTable("WorkRecords");
                });

            modelBuilder.Entity("TgBotFrame.Commands.Authorization.Models.DbBan", b =>
                {
                    b.HasOne("TgBotFrame.Commands.Authorization.Models.DbUser", "User")
                        .WithMany("Bans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TgBotFrame.Commands.Authorization.Models.DbRoleMember", b =>
                {
                    b.HasOne("TgBotFrame.Commands.Authorization.Models.DbRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TgBotFrame.Commands.Authorization.Models.DbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TimeWatcher.Data.Models.DbWorkRecord", b =>
                {
                    b.HasOne("TimeWatcher.Data.Models.DbWorkMessage", "Message")
                        .WithMany("Records")
                        .HasForeignKey("Date")
                        .HasPrincipalKey("Date")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TgBotFrame.Commands.Authorization.Models.DbUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Message");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TgBotFrame.Commands.Authorization.Models.DbUser", b =>
                {
                    b.Navigation("Bans");
                });

            modelBuilder.Entity("TimeWatcher.Data.Models.DbWorkMessage", b =>
                {
                    b.Navigation("Records");
                });
#pragma warning restore 612, 618
        }
    }
}
